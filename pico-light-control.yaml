esphome:
  name: pico-light-control
  friendly_name: Pico Light Control
  includes:
    - pico-light-control/drawing.h
    - pico-light-control/joystick.h

rp2040:
  board: rpipicow

#Enable logging
logger:

# Enable Home Assistant API
api:
  encryption:
    key: !secret api_key
  actions:
    - action: alert
      variables:
        first_line: string
        second_line: string
      then:
        - globals.set:
            id: alert_first_line
            value: !lambda 'return first_line;'
        - globals.set:
            id: alert_second_line
            value: !lambda 'return second_line;'
        - script.execute: show_alert

ota:
  - platform: esphome
    password: !secret ota_password

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  fast_connect: true
  manual_ip:
    static_ip: 192.168.1.123
    gateway: 192.168.1.1
    subnet: 255.255.255.0
    
  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    password: !secret fallback_hotspot_password

event:
  - id: yeelight_control
    name: "Yeelight control"
    platform: template
    event_types:
      - yeelight_dim
      - yeelight_brighten

  - id: lamp_control
    name: "Lamp control"
    platform: template
    event_types:
      - lamp_dim
      - lamp_brighten

  - id: yeelight_ambilight_control
    name: "Yeelight ambilight control"
    platform: template
    event_types:
      - yeelight_ambilight_dim
      - yeelight_ambilight_brighten

  - id: wled_control
    name: "WLED control"
    platform: template
    event_types:
      - wled_dim
      - wled_brighten

globals:
  - id: alert_displayed
    type: bool
    restore_value: no
    initial_value: 'false'

  - id: alert_first_line
    type: std::string
    restore_value: no

  - id: alert_second_line
    type: std::string
    restore_value: no

script:
  - id: backlight_short
    mode: restart
    then:
      - light.turn_on: backlight
      - delay: 5s
      - light.turn_off: backlight

  - id: show_alert
    mode: restart
    then:
      - script.stop: backlight_short
      - globals.set:
          id: alert_displayed
          value: 'true'
      - light.turn_on: backlight
      - component.update: my_display
      - delay: 10min
      - globals.set:
          id: alert_displayed
          value: 'false'
      - component.update: my_display
      - light.turn_off: backlight

  - id: disable_alert
    then:
      - script.stop: show_alert
      - globals.set:
          id: alert_displayed
          value: 'false'
      - component.update: my_display
      - light.turn_off: backlight

  - id: joystick_up_script
    mode: restart
    then:
      - while:
          condition:
            binary_sensor.is_on: joystick_up
          then:
            - lambda: |-
                handle_joystick_updown(UP);
            - delay: 500ms
                
  - id: joystick_down_script
    mode: restart
    then:
      - while:
          condition:
            binary_sensor.is_on: joystick_down
          then:
            - lambda: |-
                handle_joystick_updown(DOWN);
            - delay: 500ms

# Allow dimmable control of the backlight
output:
  - platform: rp2040_pwm
    pin: GPIO13
    id: gpio13

light:
  - platform: monochromatic
    output: gpio13
    id: backlight
    restore_mode: RESTORE_AND_OFF
    on_turn_off: 
      then:
      - display.page.show: page_yeelight

spi:
  clk_pin: GPIO10
  mosi_pin: GPIO11
  
button:
  - platform: restart
    name: "Restart"
    id: restart_button

display:
  - platform: ili9xxx
    model: ST7789V
    id: my_display
    invert_colors: true
    color_palette: 8BIT
    dimensions:
      height: 240
      width: 240
      offset_height: 0
      offset_width: 0
    cs_pin: GPIO9
    dc_pin: GPIO8
    reset_pin: GPIO12
    rotation: 90
    data_rate: 80MHz
    update_interval: 10d # NEVER, screen is updated manually
    pages: 
      - id: page_yeelight
        lambda: |- 
          drawBrightnessPage(it, "Yeelight", id(yeelight).state, id(yeelight_brightness).state);
      - id: page_lamp
        lambda: |- 
          drawBrightnessPage(it, "Lampka", id(lamp).state, id(lamp_brightness).state);
      - id: page_yeelight_ambilight
        lambda: |- 
          drawBrightnessPage(it, "Ambilight", id(yeelight_ambilight).state, id(yeelight_ambilight_brightness).state);
      - id: page_wled
        lambda: |- 
          drawBrightnessPage(it, "WLED", id(wled).state, id(wled_brightness).state);
      - id: page_display_brightness
        lambda: |- 
          drawBrightnessPage(it, "Jasnosc tutaj", id(backlight).remote_values.is_on(), id(backlight).remote_values.get_brightness() * 255);
    on_page_change: 
      then:
        - component.update: my_display

binary_sensor:
  - platform: gpio
    pin:
      number: GPIO15
      inverted: true
      mode:
        input: true
        pullup: true
    name: "Button A"
    filters:
      - lambda: |-
          if (id(alert_displayed)) {
            id(disable_alert).execute();
            return false;
          } else {
            return x;
          }

  - platform: gpio
    pin:
      number: GPIO17
      inverted: true
      mode:
        input: true
        pullup: true
    name: "Button B"
    filters:
      - lambda: |-
          if (id(alert_displayed)) {
            id(disable_alert).execute();
            return false;
          } else {
            return x;
          }

  - platform: gpio
    pin:
      number: GPIO19
      inverted: true
      mode:
        input: true
        pullup: true
    name: "Button X"
    filters:
      - lambda: |-
          if (id(alert_displayed)) {
            id(disable_alert).execute();
            return false;
          } else {
            return x;
          }

  - platform: gpio
    pin:
      number: GPIO21
      inverted: true
      mode:
        input: true
        pullup: true
    name: "Button Y"
    filters:
      - lambda: |-
          if (id(alert_displayed)) {
            id(disable_alert).execute();
            return false;
          } else {
            return x;
          }

  - platform: gpio
    pin:
      number: GPIO3
      inverted: true
      mode:
        input: true
        pullup: true
    name: "Joystick OK"
    internal: True
    filters:
      - lambda: |-
          if (id(alert_displayed)) {
            id(disable_alert).execute();
            return false;
          } else {
            return x;
          }
    on_click: 
      then:
        - script.execute: backlight_short
        - component.update: my_display
    on_multi_click: 
    - timing:
      - ON for at least 5s
      then:
      - button.press: restart_button

  - platform: gpio
    pin:
      number: GPIO2
      inverted: true
      mode:
        input: true
        pullup: true
    name: "Joystick Up"
    id: joystick_up
    internal: True
    on_press:
      - script.execute: joystick_up_script
    on_release:
      - script.stop: joystick_up_script
      
  - platform: gpio
    pin:
      number: GPIO18
      inverted: true
      mode:
        input: true
        pullup: true
    name: "Joystick Down"
    id: joystick_down
    internal: True
    on_press:
      - script.execute: joystick_down_script
    on_release:
      - script.stop: joystick_down_script

  - platform: gpio
    pin:
      number: GPIO16
      inverted: true
      mode:
        input: true
        pullup: true
    name: "Joystick Left"
    internal: True
    on_click:
      then: 
      - script.execute: backlight_short
      - display.page.show_previous: my_display

  - platform: gpio
    pin:
      number: GPIO20
      inverted: true
      mode:
        input: true
        pullup: true
    name: "Joystick Right"
    internal: True
    on_click:
      then: 
      - script.execute: backlight_short
      - display.page.show_next: my_display

  - platform: status
    name: "Node Status"
    id: system_status
    on_state: 
      then:
      - component.update: my_display

  - platform: homeassistant
    id: lamp
    entity_id: light.ikea_tradfri_lampka_swiatlo
    
  - platform: homeassistant
    id: yeelight
    entity_id: light.yeelight_lamp15_0x1e4bf3ad

  - platform: homeassistant
    id: yeelight_ambilight
    entity_id: light.yeelight_lamp15_0x1e4bf3ad_ambilight

  - platform: homeassistant
    id: wled
    entity_id: light.wled

color:
  - id: my_red
    red: 100%
    green: 0%
    blue: 0%
  - id: my_green
    red: 0%
    green: 80%
    blue: 40%
  - id: my_blue
    red: 0%
    green: 0%
    blue: 60%
  - id: my_gray
    red: 60%
    green: 60%
    blue: 60%
  - id: my_dark_gray
    red: 40%
    green: 40%
    blue: 40%
  - id: my_light_gray
    red: 80%
    green: 80%
    blue: 80%

font:
  - file: "pico-light-control/Helvetica-Bold.ttf"
    id: font_bold_48
    size: 48
  - file: "pico-light-control/Helvetica.ttf"
    id: font_48
    size: 48
  - file: "pico-light-control/Helvetica.ttf"
    id: font_30
    size: 30
  - file: "pico-light-control/Helvetica.ttf"
    id: font_24
    size: 24

sensor:
  - platform: homeassistant
    id: yeelight_brightness
    entity_id: light.yeelight_lamp15_0x1e4bf3ad
    attribute: brightness
    on_value: 
      then:
      - if:
          all:
          - display.is_displaying_page: page_yeelight
          - light.is_on: backlight
          then:
            - component.update: my_display

  - platform: homeassistant
    id: lamp_brightness
    entity_id: light.ikea_tradfri_lampka_swiatlo
    attribute: brightness
    on_value: 
      then:
      - if:
          all:
          - display.is_displaying_page: page_lamp
          - light.is_on: backlight
          then:
            - component.update: my_display

  - platform: homeassistant
    id: yeelight_ambilight_brightness
    entity_id: light.yeelight_lamp15_0x1e4bf3ad_ambilight
    attribute: brightness
    on_value: 
      then:
      - if:
          all:
          - display.is_displaying_page: page_yeelight_ambilight
          - light.is_on: backlight
          then:
            - component.update: my_display

  - platform: homeassistant
    id: wled_brightness
    entity_id: light.wled
    attribute: brightness
    on_value: 
      then:
      - if:
          all:
          - display.is_displaying_page: page_wled
          - light.is_on: backlight
          then:
            - component.update: my_display

text_sensor:  
  - platform: version
    name: "Version"
    icon: mdi:cube-outline
